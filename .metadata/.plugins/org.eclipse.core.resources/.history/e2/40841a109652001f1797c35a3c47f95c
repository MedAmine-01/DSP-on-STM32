/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include "stm32f4xx.h"
#include "signals.h"
#include "uart.h"
#include <stdio.h>
#include "adc.h"
#include "fir_filter.h"
#include "fifo.h"
#include "tim.h"




uint32_t rx_data[50];

uin32_t timer;


static void plot_input_signal(void);
static void pseudo_delay(void);


int main(void)
{
	//Enable Floating Point Unit
 	SCB->CPACR |= ((3UL<<20)| (3UL<<22));	//full access to cp11 and cp10 (refer to cortex user guide (fpu))


 	RCC->AHB1ENR |= (1<<0);
 	GPIOA->MODER |= (1<<10);
 	GPIOA->MODER &=~ (1<<11);

 	GPIOA->ODR ^= (1<<5);


 	tim2_1hz_interrupt_init();



	while(1){
		//printf("Hello from STM32\n\r");

		timer=TIM2->CNT;
		pseudo_delay();
	}
}
static void plot_input_signal(void){
	for(int i=0;i< KHZ1_15_SIG_LEN ;i++){
		pseudo_delay();
	}
}



static void pseudo_delay(void){
	 for(int i=0;i <100000; i++){

	 }
}

static void tim2_callback(void){
	GPIOA->ODR ^= (1<<5);
}

void TIM2_IRQHandler(){
	/*Clear update Interrupt flag*/
	TIM2->SR&=~(1<<0);
	/*Do ISR*/
	tim2_callback();
}



