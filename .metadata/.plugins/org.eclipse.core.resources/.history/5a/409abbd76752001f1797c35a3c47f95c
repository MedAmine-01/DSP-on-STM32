/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include "stm32f4xx.h"
#include "signals.h"
#include "uart.h"
#include <stdio.h>
#include "systick.h"



#define GPIOAEN			(1U<<0)
#define PIN5			(1U<<5)
#define LED_PIN			PIN5



extern float32_t _10hz_100hz_500hz_sig[_10HZ_100HZ_500HZ_SIG_LEN];
extern float32_t lpf_fc_70hz[LPF_FC_70HZ_LEN];
extern float32_t hpf_fc_400hz[HPF_FC_400HZ_LEN];

float32_t lowpass_signal[_10HZ_100HZ_500HZ_SIG_LEN+LPF_FC_70HZ_LEN-1];
float32_t highpass_signal[_10HZ_100HZ_500HZ_SIG_LEN+LPF_FC_70HZ_LEN-1];
float hp_sig, lp_sig, o_sig;


static void plot_input_signal(void);
static void pseudo_delay(void);




int main(void)
{
	//Enable Floating Point Unit
	SCB->CPACR |= ((3UL<<20)| (3UL<<22));	//full access to cp11 and cp10 (refer to cortex user guide (fpu))

	uart2_tx_init();
	systick_init();

	arm_conv_f32(_10hz_100hz_500hz_sig, _10HZ_100HZ_500HZ_SIG_LEN, lpf_fc_70hz, LPF_FC_70HZ_LEN, lowpass_signal);
	arm_conv_f32(_10hz_100hz_500hz_sig, _10HZ_100HZ_500HZ_SIG_LEN, hpf_fc_400hz, HPF_FC_400HZ_LEN, highpass_signal);

	//DFT(_640_points_ecg_, (uint32_t) ECG_SIG_LEN, ReX, ImX);

	plot_input_signal();
	while(1){
		//printf("Hello from STM32\n\r");
	}
}
static void plot_input_signal(void){
	for(int i=0;i< LPF_FC_70HZ_LEN+_10HZ_100HZ_500HZ_SIG_LEN;i++){
		f_sig=filtered_signal[i];
		if(i<_10HZ_100HZ_500HZ_SIG_LEN){
			o_sig=_10hz_100hz_500hz_sig[i];
		}
		pseudo_delay();
	}
}

static void pseudo_delay(void){
	 for(int i=0;i <30000; i++){

	 }
}


